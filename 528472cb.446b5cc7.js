(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{130:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),b=a,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return t?r.a.createElement(m,s(s({ref:n},l),{},{components:t})):r.a.createElement(m,s({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=b;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},85:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),o=(t(0),t(130)),i={id:"using-with-class-transformer",title:"Using with class-transformer"},s={unversionedId:"guides/advanced/using-with-class-transformer",id:"guides/advanced/using-with-class-transformer",isDocsHomePage:!1,title:"Using with class-transformer",description:"This guide shows how to use typegoose with class-transformer.",source:"@site/../docs/guides/advanced/class-transformer.md",slug:"/guides/advanced/using-with-class-transformer",permalink:"/typegoose/docs/guides/advanced/using-with-class-transformer",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/class-transformer.md",version:"current",sidebar:"guides",previous:{title:"Using ObjectId Type",permalink:"/typegoose/docs/guides/advanced/using-objectid-type"},next:{title:"Migrate to 6.0.0",permalink:"/typegoose/docs/guides/migrate-6"}},c=[{value:"Implementation",id:"implementation",children:[]}],l={rightToc:c};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This guide shows how to use ",Object(o.b)("inlineCode",{parentName:"p"},"typegoose")," with ",Object(o.b)("inlineCode",{parentName:"p"},"class-transformer"),"."),Object(o.b)("h2",{id:"implementation"},"Implementation"),Object(o.b)("p",null,"Suppose you have this ",Object(o.b)("inlineCode",{parentName:"p"},"Account")," class decorated with ",Object(o.b)("inlineCode",{parentName:"p"},"class-transformer"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"import { Exclude, Expose, Transform } from 'class-transformer';\nimport { getModelForClass, mongoose, prop } from 'typegoose';\n\n// re-implement base Document to allow class-transformer to serialize/deserialize _id and __v\nclass DocumentCT {\n  @Expose()\n  @Transform(\n    // deserialize ObjectId into a string\n    (value: any) => value instanceof mongoose.Types.ObjectId\n      ? value.toHexString()\n      : value,\n    { toClassOnly: true })\n  public _id: string;\n\n  @Expose()\n  public __v: number;\n}\n\n@Exclude()\nclass Account extends DocumentCT {\n  @prop()\n  @Expose()\n  public email: string;\n\n  @prop()\n  @Expose({ groups: ['admin'] })\n  public password: string;\n}\n\nconst AccountModel = getModelForClass(Account);\n")),Object(o.b)("p",null,"You can then use, for example:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"p"},"lean()")," on the query:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// lean return a Plain Old Javascript Object\nconst pojo = await AccountModel.findById(id).orFail().lean().exec();\n// deserialize Plain Old Javascript Object into an instance of the Account class\nconst deserialized = plainToClass(Account, pojo);\n// serialize Account instance back to a Plain Old Javascript Object, applying class-transformer's magic\nconst serialized = classToPlain(deserialized);\n"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"or an normal document:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// exec return a Mongoose Object\nconst mo = await AccountModel.findById(id).orFail().exec();\n// deserialize Mongoose Object into an instance of the Account class\nconst deserialized = plainToClass(Account, mo);\n// serialize Account instance back to a Plain Old Javascript Object, applying class-transformer's magic\nconst serialized = classToPlain(deserialized);\n")))),Object(o.b)("p",null,"As you can see from these examples, there is:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"a redundant step to first turn the output of the query into a full instance of ",Object(o.b)("inlineCode",{parentName:"li"},"Account")," : ",Object(o.b)("inlineCode",{parentName:"li"},"plainToClass(..., ...)")),Object(o.b)("li",{parentName:"ul"},"before being able to benefit from its features for serialization: ",Object(o.b)("inlineCode",{parentName:"li"},"classToPlain(...)"))),Object(o.b)("p",null,"Reason is that queries will output ",Object(o.b)("inlineCode",{parentName:"p"},"DocumentType<Account>")," (Mongoose Document) instead of required ",Object(o.b)("inlineCode",{parentName:"p"},"Account")," (Plain Object / instance of the Class) in this example."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"class-transformer")," can only operates its magic on instances of annotated class."))}p.isMDXComponent=!0}}]);